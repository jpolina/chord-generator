{"version":3,"sources":["logo.svg","components/BeatContext.js","components/Key.js","components/Column.js","components/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["BeatContext","createContext","synth","Tone","toDestination","Key","props","setNote","signal","beat","currentBeat","useContext","useState","buttonColor","setButtonColor","textColor","setTextColor","useEffect","children","buttonStyle","backgroundColor","color","class","onMouseDown","triggerAttackRelease","style","Column","pushNote","note","setSignal","chordPlayer","bpm","value","randomInt","IChord1","IChord2","IbChord1","IbChord2","IVChord1","IVChord2","IVbChord1","IVbChord2","VChord1","VChord2","VbChord1","VbChord2","iiChord1","iiChord2","viChord1","viChord2","iiiChord1","iiiChord2","getRandomInt","max","Math","floor","random","Grid","note1","pushNote1","note2","pushNote2","note3","pushNote3","note4","pushNote4","note5","pushNote5","note6","pushNote6","note7","pushNote7","note8","pushNote8","note9","pushNote9","note10","pushNote10","note11","pushNote11","note12","pushNote12","note13","pushNote13","note14","pushNote14","note15","pushNote15","note16","pushNote16","chordArray","setChordArray","BPM","setBPM","setCurrentBeat","isActive","setIsActive","interval","setInterval","clearInterval","playMelody","stop","cancel","noteArray","time","start","output","prev","i","beat1","charAt","beat2","push","length","generateChords","Provider","type","onClick","min","defaultValue","id","onChange","event","target","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAAe,I,6BCEFA,G,MAAcC,wBAAc,I,OCGnCC,GAAQ,IAAIC,KAAiBC,gBA8CpBC,MA5Cf,SAAaC,EAAOC,EAASC,EAAQC,GACjC,IAAIC,EAAcC,qBAAWX,GAC7B,EAAsCY,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAWAC,qBAAU,WACFX,EAAMY,WAAWZ,EAAME,QACvBM,EAAe,mBACfE,EAAa,WAEbF,EAAe,sBACfE,EAAa,YAElB,CAACV,EAAME,SAEVS,qBAAU,WACFX,EAAMY,UAAUZ,EAAME,SAClBE,GAAaJ,EAAMG,MACnBK,EAAe,qBACfE,EAAa,WAEbF,EAAe,mBACfE,EAAa,aAGvB,CAACN,IACH,IAAIS,EAAc,CACdC,gBAAgBP,EAChBQ,MAAMN,GAEV,OACI,wBAAQO,MAAM,SAASC,YAnCT,WACXjB,EAAMY,WAAWZ,EAAME,QAC1BN,EAAMsB,qBAAqBlB,EAAMY,SAAU,OAC3CZ,EAAMC,QAAQD,EAAMY,WAEhBZ,EAAMC,QAAQ,MA8B6BkB,MAAON,EAAtD,SAAoEb,EAAMY,YCVnEQ,G,MAlCA,SAACpB,EAAOqB,EAAUlB,GAC7B,MAAqBG,mBAAS,KAA9B,mBAAMgB,EAAN,KAAYrB,EAAZ,KACAD,EAAMqB,SAASC,GACf,MAA4BhB,mBAAS,GAArC,mBAAOJ,EAAP,KAAeqB,EAAf,KAKA,OAHAZ,qBAAU,WACNY,EAAUD,KACZ,CAACA,IAEC,8BACI,sBAAKN,MAAQ,iBAAb,UACI,cAAC,EAAD,CAAKA,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,gBACA,cAAC,EAAD,CAAKa,MAAM,YAAYf,QAASA,EAASC,OAAUA,EAAQC,KAAMH,EAAMG,KAAvE,uBChBVP,G,yBAAQ,IAAIC,KAAaC,iBACzB0B,GAAc,IAAI3B,KAAaC,gBACrCD,IAAe4B,IAAIC,MAAQ,IAI3B,IAoBIC,EApBEC,EAAU,CAAC,KAAK,MAChBC,EAAU,CAAC,KAAK,MAChBC,EAAW,CAAC,KAAM,MAClBC,EAAW,CAAC,KAAM,MAClBC,EAAW,CAAC,KAAM,MAClBC,EAAW,CAAC,KAAM,MAClBC,EAAY,CAAC,KAAM,MACnBC,EAAY,CAAC,KAAM,MACnBC,EAAU,CAAC,KAAM,MACjBC,EAAU,CAAC,KAAM,MACjBC,EAAW,CAAC,KAAM,MAClBC,EAAW,CAAC,KAAM,MAClBC,EAAW,CAAC,KAAK,MACjBC,EAAW,CAAC,KAAK,MACjBC,EAAW,CAAC,KAAK,MACjBC,EAAW,CAAC,KAAK,MACjBC,EAAY,CAAC,KAAM,MACnBC,EAAY,CAAC,KAAM,MAIzB,SAASC,EAAaC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAEtC,IA6ReI,EAxRF,WACT,MAA2B7C,qBAA3B,mBAAO8C,EAAP,KAAcC,EAAd,KACA,EAA2B/C,qBAA3B,mBAAOgD,EAAP,KAAcC,EAAd,KACA,EAA2BjD,qBAA3B,mBAAOkD,EAAP,KAAcC,EAAd,KACA,EAA2BnD,qBAA3B,mBAAOoD,EAAP,KAAcC,EAAd,KACA,EAA2BrD,qBAA3B,mBAAOsD,EAAP,KAAcC,EAAd,KACA,EAA2BvD,qBAA3B,mBAAOwD,EAAP,KAAcC,EAAd,KACA,EAA2BzD,qBAA3B,oBAAO0D,GAAP,MAAcC,GAAd,MACA,GAA2B3D,qBAA3B,qBAAO4D,GAAP,MAAcC,GAAd,MACA,GAA2B7D,qBAA3B,qBAAO8D,GAAP,MAAcC,GAAd,MACA,GAA6B/D,qBAA7B,qBAAOgE,GAAP,MAAeC,GAAf,MACA,GAA6BjE,qBAA7B,qBAAOkE,GAAP,MAAeC,GAAf,MACA,GAA6BnE,qBAA7B,qBAAOoE,GAAP,MAAeC,GAAf,MACA,GAA6BrE,qBAA7B,qBAAOsE,GAAP,MAAeC,GAAf,MACA,GAA6BvE,qBAA7B,qBAAOwE,GAAP,MAAeC,GAAf,MACA,GAA6BzE,qBAA7B,qBAAO0E,GAAP,MAAeC,GAAf,MACA,GAA6B3E,qBAA7B,qBAAO4E,GAAP,MAAeC,GAAf,MAEA,GAAoC7E,mBAAS,IAA7C,qBAAO8E,GAAP,MAAmBC,GAAnB,MACA,GAAsB/E,mBAAS,KAA/B,qBAAOgF,GAAP,MAAYC,GAAZ,MACA5E,qBAAU,WACNd,IAAe4B,IAAIC,MAAQ4D,GAAI,IAChC,CAACA,KAIJ,OAAsChF,mBAAS,GAA/C,qBAAOF,GAAP,MAAoBoF,GAApB,MACA,GAAgClF,oBAAS,GAAzC,qBAAOmF,GAAP,MAAiBC,GAAjB,MASA/E,qBAAU,WACN,IAAIgF,EAAW,KAQf,OAPIF,GACFE,EAAWC,aAAY,WACrBJ,IAAe,SAAApF,GAAW,OAAIA,EAAc,OAC3C,GAAGkF,GAAI,KACAG,IAA4B,IAAhBrF,IACtByF,cAAcF,GAET,kBAAME,cAAcF,MAC1B,CAACF,GAAU,GAAGH,KAEnB3E,qBAAU,WACFP,GAAY,IACZoF,GAAe,KAErB,CAACpF,KAEH,IAyJM0F,GAAa,WACfjG,IAAekG,OACflG,IAAemG,SACf,IAAIC,EAAY,CAAC7C,EAAME,EAAME,EAAOE,EAAOE,EAAOE,EAAOE,GAAOE,GAAOE,GAAOE,GAAQE,GAAQE,GAAQE,GAAQE,GAAQE,GAAQE,IACpH,IAAIrF,KAAc,SAACqG,EAAM5E,GAC/B1B,EAAMsB,qBAAqBI,EAAK,IAAM4E,KACvCD,GAAWE,MAAM,GAEH,IAAItG,KAAc,SAACqG,EAAM5E,GACtCE,EAAYN,qBAAqBI,EAAM,GAAK4E,KAlK7B,WACnB,IAAID,EAAY,CAAC7C,EAAME,EAAME,EAAOE,EAAOE,EAAOE,EAAOE,GAAOE,GAAOE,GAAOE,GAAQE,GAAQE,GAAQE,GAAQE,GAAQE,GAAQE,IAC1HkB,EAAS,GACTC,EAAO,GACXhB,GAAc,IACd,IAAK,IAAIiB,EAAE,EAAEA,EAAE,GAAGA,GAAG,EAAG,CACpB,IAAIC,EAAQN,EAAUK,GAAGE,OAAO,GAC5BC,EAAQR,EAAUK,EAAE,GAAGE,OAAO,GAWlC,OAAOD,GACH,QACA,IAAK,IACD5E,EAAYmB,EAAa,GACf,KAANuD,GACAD,EAAOM,KAAK9E,GACZwE,EAAOM,KAAK7E,GACZwD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCiB,EAAK,IAEc,IAAZ1E,GACPyE,EAAOM,KAAKhE,GACZ0D,EAAOM,KAAK/D,GACZ0C,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACtB,IAAZzD,GACPyE,EAAOM,KAAK1E,GACZoE,EAAOM,KAAKzE,GACZoD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACtB,IAAZzD,GACPyE,EAAOM,KAAK5E,GACZsE,EAAOM,KAAK3E,GACZsD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,YACtB,IAAZzD,GACPyE,EAAOM,KAAKxE,GACZkE,EAAOM,KAAKvE,GACZkD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,YACtB,IAAZzD,IACPyE,EAAOM,KAAK9E,GACZwE,EAAOM,KAAK7E,GACZwD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UAE7C,MACJ,IAAK,IACL,IAAK,IAEe,KADhBzD,EAAYmB,EAAa,KAErBsD,EAAOM,KAAKpE,GACZ8D,EAAOM,KAAKnE,GACZ8C,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACzCiB,EAAK,KACc,IAAZ1E,IACPyE,EAAOM,KAAKtE,GACZgE,EAAOM,KAAKrE,GACZgD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCiB,EAAK,KAET,MACJ,IAAK,IAEc,IADf1E,EAAYmB,EAAa,KACLsC,GAAWuB,OAAO,GAAuB,QAAlBvB,GAAWkB,EAAE,IACpDF,EAAOM,KAAK9E,GACZwE,EAAOM,KAAK7E,GACZwD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACvB,GAAXzD,IACPyE,EAAOM,KAAK9D,GACZwD,EAAOM,KAAK7D,GACZwC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WAE7C,MACJ,IAAK,IAEc,IADfzD,EAAYmB,EAAa,KAErBsD,EAAOM,KAAKlE,GACZ4D,EAAOM,KAAKjE,GACZ4C,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACvB,GAAXzD,GACPyE,EAAOM,KAAK1E,GACZoE,EAAOM,KAAKzE,GACZoD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACvB,GAAXzD,IACPyE,EAAOM,KAAKxE,GACZkE,EAAOM,KAAKvE,GACZkD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,YAE7C,MACJ,IAAK,IACDzD,EAAYmB,EAAa,GACd,KAAP2D,GAAmB,KAAPA,GACZL,EAAOM,KAAK9E,GACZwE,EAAOM,KAAK7E,GACZwD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACvB,GAAXzD,GACPyE,EAAOM,KAAKtE,GACZgE,EAAOM,KAAKrE,GACZgD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCiB,EAAK,KACa,GAAX1E,IACPyE,EAAOM,KAAKpE,GACZ8D,EAAOM,KAAKnE,GACZ8C,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACzCiB,EAAK,KAET,MACJ,IAAK,IAEc,IADf1E,EAAYmB,EAAa,KAErBsD,EAAOM,KAAK1E,GACZoE,EAAOM,KAAKzE,GACZoD,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,SACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACvB,GAAXzD,GACPyE,EAAOM,KAAKhE,GACZ0D,EAAOM,KAAK/D,GACZ0C,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,WACvB,GAAXzD,IACPyE,EAAOM,KAAKlE,GACZ4D,EAAOM,KAAKjE,GACZ4C,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,UACzCC,IAAc,SAAAD,GAAU,4BAAMA,GAAN,CAAiB,YAMzD,OAAOgB,EAeJQ,IAA2BT,MAAM,GAEpCtG,IAAesG,SAUnB,OACI,gCACI,sBAAKnF,MAAM,kBAAX,UACQ,qBAAKA,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,KACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,MACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,MACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,MACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,MACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,MACpC,qBAAKpE,MAAM,aAAX,SAAyBoE,GAAW,SAE5C,qBAAKpE,MAAM,kBAAX,SACI,eAACtB,EAAYmH,SAAb,CAAsBnF,MAAOtB,GAA7B,UACI,cAAC,EAAD,CAAQY,MAAM,aAAaK,SAAUgC,EAAWlD,KAAM,IACtD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAUkC,EAAWpD,KAAM,IACtD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAUoC,EAAWtD,KAAM,IACtD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAUsC,EAAWxD,KAAM,IACtD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAUwC,EAAW1D,KAAM,IACtD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAU0C,EAAW5D,KAAM,IACtD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAU4C,GAAW9D,KAAM,IACtD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAU8C,GAAWhE,KAAM,IACtD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAUgD,GAAWlE,KAAM,IACtD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAUkD,GAAYpE,KAAM,KACvD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAUoD,GAAYtE,KAAM,KACvD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAUsD,GAAYxE,KAAM,KACvD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAUwD,GAAY1E,KAAM,KACvD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAU0D,GAAY5E,KAAM,KACvD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAU4D,GAAY9E,KAAM,KACvD,cAAC,EAAD,CAAQa,MAAM,aAAaK,SAAU8D,GAAYhF,KAAM,UAG/D,wBAAQ2G,KAAO,SAAS9F,MAAM,4CAA4C+F,QAAW,WAAUtB,IA7OnGD,GAAe,GACfE,IAAY,GA+LZ7F,IAAekG,SA6C+FD,KAjP9GJ,IAAY,GACZF,GAAe,KAgPX,SAAgK,iDAChK,sBAAKxE,MAAM,oCAAX,UACI,sBAAMA,MAAQ,aAAd,SAA2B,6CAC3B,uBAAO8F,KAAO,QAAQE,IAAM,KAAKjE,IAAM,MAAM/B,MAAM,SAASiG,aAAa,MAAMC,GAAG,UAAUC,SAAU,SAAAC,GAAK,OAAE7B,GAAO6B,EAAMC,OAAO3F,QAAQ4F,SAAU7B,KACnJ,sBAAMzE,MAAQ,aAAd,SAA2B,iCAASsE,cCzRrCiC,MAnCf,WAGE,OAFc,IAAI1H,KAAaC,gBAG7B,gCACE,8BACE,qBAAKkB,MAAQ,4BAAb,SACE,8BACE,qBAAIA,MAAQ,kCAAZ,UACE,sBAAMA,MAAQ,OAAd,SAAqB,gDACrB,sBAAMA,MAAQ,cAAd,8DAKR,qBAAKA,MAAQ,SAAb,SACE,cAAC,EAAD,MAEF,sBAAKA,MAAQ,oCAAb,UACE,oBAAIA,MAAQ,aAAZ,SAAyB,4BAAG,oDAC5B,mBAAGA,MAAQ,oBAAX,SACE,+BACE,2FACA,wDACA,2FACA,qFACA,4GACA,oDCpBGwG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0ff1efe6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createContext} from \"react\";\n\nexport const BeatContext = createContext(0);","import React, {useState, useEffect, useContext} from 'react';\nimport * as Tone from \"tone\";\nimport \"./Key.css\"\nimport {BeatContext} from './BeatContext'\n\nconst synth = new Tone.PolySynth().toDestination();\n\nfunction Key(props, setNote, signal, beat) {\n    let currentBeat = useContext(BeatContext);\n    const [buttonColor, setButtonColor] = useState(\"\");\n    const [textColor, setTextColor] = useState(\"\");\n\n    const playSynth = () => {\n        if(props.children!==props.signal) {\n        synth.triggerAttackRelease(props.children, \"32n\")\n        props.setNote(props.children)\n        } else {\n            props.setNote(\"0\")\n        }\n    } \n    \n    useEffect(()=>{\n        if (props.children===props.signal){\n            setButtonColor(\"rgb(20, 33, 61)\")\n            setTextColor('white')\n        } else {\n            setButtonColor(\"rgb(229, 229, 229)\")\n            setTextColor('black')\n        }\n    }, [props.signal])\n\n    useEffect(()=>{\n        if (props.children==props.signal){\n            if (currentBeat==props.beat){\n                setButtonColor(\"rgb(252, 163, 17)\")\n                setTextColor(\"black\")\n            } else {\n                setButtonColor(\"rgb(20, 33, 61)\")\n                setTextColor('white')\n            }\n        }\n    },[currentBeat])\n    let buttonStyle = {\n        backgroundColor:buttonColor,\n        color:textColor\n    }\n    return (\n        <button class=\"button\" onMouseDown={playSynth} style={buttonStyle}>{props.children}</button>\n    );\n}\n\nexport default Key;","import React, {useEffect, useState} from 'react';\nimport Key from './Key'\nimport './Column.css'\nconst Column = (props, pushNote, beat) => {\n    const[note, setNote]=useState(\"0\");\n    props.pushNote(note)\n    const [signal, setSignal] = useState(0);\n\n    useEffect(()=>{\n        setSignal(note)\n    },[note])\n    return (\n        <div>\n            <div class = \"grid-container\">\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>C6</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>B5</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>A5</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>G5</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>F5</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>E5</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>D5</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>C5</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>B4</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>A4</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>G4</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>F4</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>E4</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>D4</Key>\n                <Key class=\"grid-item\" setNote={setNote} signal = {signal} beat={props.beat}>C4</Key>\n                {/* <div class = \"grid-item\">{note}</div> */}\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Column;","import React, {useEffect, useState, useContext} from 'react';\nimport Column from './Column'\nimport * as Tone from \"tone\";\nimport './Grid.css'\nimport Popper, { createPopper} from '@popperjs/core';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport {BeatContext} from './BeatContext'\n\n\n//Create synths and BPM\nconst synth = new Tone.Synth().toDestination()\nconst chordPlayer = new Tone.Synth().toDestination()\nTone.Transport.bpm.value = 100;\n\n\n//Create the chords\nconst IChord1 = [\"C3\",\"E3\"];\nconst IChord2 = [\"G3\",\"E3\"];\nconst IbChord1 = [\"E3\", \"G3\"]\nconst IbChord2 = [\"C4\", \"G3\"]\nconst IVChord1 = [\"F3\", \"A3\"]\nconst IVChord2 = [\"C4\", \"A3\"]\nconst IVbChord1 = [\"A2\", \"C3\"]\nconst IVbChord2 = [\"F3\", \"C3\"]\nconst VChord1 = [\"G2\", \"B2\"]\nconst VChord2 = [\"D3\", \"B2\"]\nconst VbChord1 = [\"B2\", \"D3\"]\nconst VbChord2 = [\"G3\", \"D3\"]\nconst iiChord1 = [\"D3\",\"F3\"]\nconst iiChord2 = [\"A3\",\"F3\"]\nconst viChord1 = [\"A2\",\"C3\"]\nconst viChord2 = [\"E3\",\"C3\"]\nconst iiiChord1 = [\"E3\", \"G3\"]\nconst iiiChord2 = [\"B3\", \"G3\"]\n\n// Select random number\nlet randomInt;\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\nconst selectRandom = (number) => {\n    return number[Math.floor(Math.random()*number)];\n}\n\n//The grid or \"piano roll\"\nconst Grid = () => {\n    const [note1, pushNote1] = useState();\n    const [note2, pushNote2] = useState();\n    const [note3, pushNote3] = useState();\n    const [note4, pushNote4] = useState();\n    const [note5, pushNote5] = useState();\n    const [note6, pushNote6] = useState();\n    const [note7, pushNote7] = useState();\n    const [note8, pushNote8] = useState();\n    const [note9, pushNote9] = useState();\n    const [note10, pushNote10] = useState();\n    const [note11, pushNote11] = useState();\n    const [note12, pushNote12] = useState();\n    const [note13, pushNote13] = useState();\n    const [note14, pushNote14] = useState();\n    const [note15, pushNote15] = useState();\n    const [note16, pushNote16] = useState();\n\n    const [chordArray, setChordArray] = useState([]);\n    const [BPM, setBPM] = useState(100);\n    useEffect(()=>{\n        Tone.Transport.bpm.value = BPM/2;\n    }, [BPM])\n\n\n    //Parallel timer\n    const [currentBeat, setCurrentBeat] = useState(1);\n    const [isActive, setIsActive] = useState(false);\n    const toggle =()=> {\n        setIsActive(true);\n        setCurrentBeat(1);\n    }\n    const reset = () => {\n        setCurrentBeat(0)\n        setIsActive(false)\n    }\n    useEffect(() => {\n        let interval = null;\n        if (isActive) {\n          interval = setInterval(() => {\n            setCurrentBeat(currentBeat => currentBeat + 1);\n          }, 60/BPM*1000);\n        } else if (!isActive && currentBeat !== 0) {\n          clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n      }, [isActive, 60/BPM]);\n\n    useEffect(()=> {\n        if (currentBeat>16) {\n            setCurrentBeat(1)\n        }\n    },[currentBeat])\n\n    const generateChords = () =>{\n        let noteArray = [note1,note2,note3, note4, note5, note6, note7, note8, note9, note10, note11, note12, note13, note14, note15, note16]\n        let output = [];\n        let prev = \"\";\n        setChordArray([])\n        for (let i=0;i<16;i+=2) {\n            let beat1 = noteArray[i].charAt(0);\n            let beat2 = noteArray[i+1].charAt(0);\n            \n            // Determine which chord fits best with the notes\n            // 1: I, vi, IV\n            // 2: V, ii, \n            // 3: I, vi, iii\n            // 4: IV, V, ii\n            // 5: V, I, iii\n            // 6: IV, vi, ii\n            // 7: V\n            \n            switch(beat1) {\n                default:\n                case 'C':\n                    randomInt = getRandomInt(5);\n                    if (prev==\"G\") {\n                        output.push(IChord1);\n                        output.push(IChord2);\n                        setChordArray(chordArray=>[...chordArray,\"C\"])\n                        setChordArray(chordArray=>[...chordArray,\"C\"])\n                        prev=\"\";\n\n                    } else if (randomInt===0){\n                        output.push(viChord1);\n                        output.push(viChord2);\n                        setChordArray(chordArray=>[...chordArray,\"Am\"])\n                        setChordArray(chordArray=>[...chordArray,\"Am\"])\n                    } else if (randomInt===1) {\n                        output.push(IVChord1);\n                        output.push(IVChord2);\n                        setChordArray(chordArray=>[...chordArray,\"F\"])\n                        setChordArray(chordArray=>[...chordArray,\"F\"])\n                    } else if (randomInt===2) {\n                        output.push(IbChord1);\n                        output.push(IbChord2);\n                        setChordArray(chordArray=>[...chordArray,\"C/E\"])\n                        setChordArray(chordArray=>[...chordArray,\"C/E\"])\n                    } else if (randomInt===3) {\n                        output.push(IVbChord1);\n                        output.push(IVbChord2);\n                        setChordArray(chordArray=>[...chordArray,\"F/A\"])\n                        setChordArray(chordArray=>[...chordArray,\"F/A\"])\n                    } else if (randomInt===4) {\n                        output.push(IChord1);\n                        output.push(IChord2);\n                        setChordArray(chordArray=>[...chordArray,\"C\"])\n                        setChordArray(chordArray=>[...chordArray,\"C\"])\n                    }\n                    break;\n                case 'D':\n                case 'B':\n                    randomInt = getRandomInt(2);\n                    if (randomInt===0){\n                        output.push(VbChord1);\n                        output.push(VbChord2);\n                        setChordArray(chordArray=>[...chordArray,\"G/B\"])\n                        setChordArray(chordArray=>[...chordArray,\"G/B\"])\n                        prev=\"G\";\n                    } else if (randomInt===1){\n                        output.push(VChord1);\n                        output.push(VChord2);\n                        setChordArray(chordArray=>[...chordArray,\"G\"])\n                        setChordArray(chordArray=>[...chordArray,\"G\"])\n                        prev=\"G\";\n                    }\n                    break;\n                case 'E':\n                    randomInt = getRandomInt(2);\n                    if (randomInt==0 || chordArray.length>0 && chordArray[i-1]===\"G/B\") {\n                        output.push(IChord1);\n                        output.push(IChord2);\n                        setChordArray(chordArray=>[...chordArray,\"C\"])\n                        setChordArray(chordArray=>[...chordArray,\"C\"])\n                    } else if (randomInt==1) {\n                        output.push(iiiChord1);\n                        output.push(iiiChord2);\n                        setChordArray(chordArray=>[...chordArray,\"Em\"])\n                        setChordArray(chordArray=>[...chordArray,\"Em\"])\n                    }\n                    break;\n                case 'F':\n                    randomInt = getRandomInt(3);\n                    if (randomInt==0) {\n                        output.push(iiChord1);\n                        output.push(iiChord2);\n                        setChordArray(chordArray=>[...chordArray,\"Dm\"])\n                        setChordArray(chordArray=>[...chordArray,\"Dm\"])\n                    } else if (randomInt==1) {\n                        output.push(IVChord1);\n                        output.push(IVChord2);\n                        setChordArray(chordArray=>[...chordArray,\"F\"])\n                        setChordArray(chordArray=>[...chordArray,\"F\"])\n                    } else if (randomInt==2) {\n                        output.push(IVbChord1);\n                        output.push(IVbChord2);\n                        setChordArray(chordArray=>[...chordArray,\"F/A\"])\n                        setChordArray(chordArray=>[...chordArray,\"F/A\"])\n                    }\n                    break;\n                case 'G':\n                    randomInt = getRandomInt(2)\n                    if (beat2==\"C\"||beat2==\"E\") {\n                        output.push(IChord1);\n                        output.push(IChord2);\n                        setChordArray(chordArray=>[...chordArray,\"C\"])\n                        setChordArray(chordArray=>[...chordArray,\"C\"])\n                    } else if (randomInt==0){\n                        output.push(VChord1);\n                        output.push(VChord2);\n                        setChordArray(chordArray=>[...chordArray,\"G\"])\n                        setChordArray(chordArray=>[...chordArray,\"G\"])\n                        prev=\"G\"\n                    } else if (randomInt==1){\n                        output.push(VbChord1);\n                        output.push(VbChord2);\n                        setChordArray(chordArray=>[...chordArray,\"G/B\"])\n                        setChordArray(chordArray=>[...chordArray,\"G/B\"])\n                        prev=\"G\"\n                    }\n                    break;\n                case 'A':\n                    randomInt = getRandomInt(3);\n                    if (randomInt==0){\n                        output.push(IVChord1);\n                        output.push(IVChord2);\n                        setChordArray(chordArray=>[...chordArray,\"F\"])\n                        setChordArray(chordArray=>[...chordArray,\"F\"])\n                    } else if (randomInt==1) {\n                        output.push(viChord1);\n                        output.push(viChord2);\n                        setChordArray(chordArray=>[...chordArray,\"Am\"])\n                        setChordArray(chordArray=>[...chordArray,\"Am\"])\n                    } else if (randomInt==2) {\n                        output.push(iiChord1);\n                        output.push(iiChord2);\n                        setChordArray(chordArray=>[...chordArray,\"Dm\"])\n                        setChordArray(chordArray=>[...chordArray,\"Dm\"])\n                    }\n                    break;\n                    \n            }\n        }\n        return output;\n    }\n\n\n    const playMelody = () => {\n        Tone.Transport.stop()\n        Tone.Transport.cancel();\n        let noteArray = [note1,note2,note3, note4, note5, note6, note7, note8, note9, note10, note11, note12, note13, note14, note15, note16]\n        const seq=new Tone.Sequence((time, note)=>{\n            synth.triggerAttackRelease(note,0.01, time);\n        }, noteArray).start(0);\n\n        const chordSeq = new Tone.Sequence((time, note) => {\n            chordPlayer.triggerAttackRelease(note, 0.1, time);\n            // subdivisions are given as subarrays\n        }, generateChords(noteArray)).start(0);\n\n        Tone.Transport.start();\n    }\n    \n\n    const stopMelody = () => {\n        Tone.Transport.stop()\n        \n    }\n\n\n    return (\n        <div>\n            <div class=\"grid-container2\">\n                    <div class='grid-item2'>{chordArray[0]}</div>\n                    <div class='grid-item2'>{chordArray[1]}</div>\n                    <div class='grid-item2'>{chordArray[2]}</div>\n                    <div class='grid-item2'>{chordArray[3]}</div>\n                    <div class='grid-item2'>{chordArray[4]}</div>\n                    <div class='grid-item2'>{chordArray[5]}</div>\n                    <div class='grid-item2'>{chordArray[6]}</div>\n                    <div class='grid-item2'>{chordArray[7]}</div>\n                    <div class='grid-item2'>{chordArray[8]}</div>\n                    <div class='grid-item2'>{chordArray[9]}</div>\n                    <div class='grid-item2'>{chordArray[10]}</div>\n                    <div class='grid-item2'>{chordArray[11]}</div>\n                    <div class='grid-item2'>{chordArray[12]}</div>\n                    <div class='grid-item2'>{chordArray[13]}</div>\n                    <div class='grid-item2'>{chordArray[14]}</div>\n                    <div class='grid-item2'>{chordArray[15]}</div>\n            </div>\n            <div class=\"grid-container1\">\n                <BeatContext.Provider value={currentBeat}>\n                    <Column class=\"grid-item1\" pushNote={pushNote1} beat={1}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote2} beat={2}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote3} beat={3}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote4} beat={4}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote5} beat={5}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote6} beat={6}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote7} beat={7}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote8} beat={8}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote9} beat={9}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote10} beat={10}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote11} beat={11}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote12} beat={12}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote13} beat={13}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote14} beat={14}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote15} beat={15}/>\n                    <Column class=\"grid-item1\" pushNote={pushNote16} beat={16}/>\n                </BeatContext.Provider>\n            </div>\n            <button type = \"button\" class=\"btn btn-light playButton shadow mb-4 mt-2\" onClick = {()=>{if (!isActive) {playMelody(); toggle()} else{reset();stopMelody() }}}><strong>Play/Stop</strong></button>\n            <div class=\"slidecontainer shadow p-3 rounded\">\n                <span class = 'bpmDisplay'><strong>BPM: </strong></span>\n                <input type = \"range\" min = \"60\" max = \"200\" class=\"slider\" defaultValue='100' id=\"myRange\" onChange={event=>setBPM(event.target.value)} disabled={isActive}></input>\n                <span class = 'bpmDisplay'><strong>{BPM}</strong></span>\n            </div>\n        </div>\n    )\n}\n\nexport default Grid;","import logo from './logo.svg';\nimport './App.css';\nimport * as Tone from \"tone\";\nimport Grid from './components/Grid'\n\nfunction App() {\n  const synth = new Tone.Synth().toDestination();\n\n  return (\n    <div>\n      <div>\n        <div class = 'rectangle shadow p-3 mb-4'>\n          <div>\n            <h1 class = 'centerTitle d-print-inline name'>\n              <span class = \"name\"><strong>Chordial</strong></span>\n              <span class = \"description\"> - a Chord Generator by Jonathan Polina</span>\n            </h1>\n          </div>\n        </div>\n      </div>\n      <div class = 'center'>\n        <Grid/>\n      </div>\n      <div class = 'center rectangle1 shadow p-3 mb-5'>\n        <h1 class = \"text title\"><u><strong>How to use</strong></u></h1>\n        <p class = \"text instructions\">\n          <ol>\n            <li>Enter a melody in the key of C major into the grid above.</li>\n            <li>Click the Play button.</li>\n            <li>Chords which fit the melody will be generated and played.</li>\n            <li>Clicking the Play button again will stop the music.</li>\n            <li>Clicking the Play button again will generate and play a new set of chords.</li>\n            <li>Enjoy!</li>\n          </ol>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}